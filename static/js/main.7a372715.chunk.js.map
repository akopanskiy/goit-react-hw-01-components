{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistic/Statistic.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistic/Statistic.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transaction/TransactionList.js","components/Transaction/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","url","name","tag","location","followers","views","likes","className","styles","profile","description","src","alt","avatar","stats","statsContainer","label","quantity","randColor","r","Math","floor","random","g","b","toString","Statistic","title","statistic","statList","map","item","style","backgroundColor","percentage","id","defaultTypes","stylesIsOnline","width","height","borderRadius","marginLeft","FriendListItem","isOnline","FriendList","friends","friendList","prototype","PropTypes","arrayOf","shape","number","isRequired","TransactionList","type","amount","currency","TransactionHistory","items","App","user","statisticData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a372715.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__39Kgt\",\"description\":\"Profile_description__3QpNF\",\"avatar\":\"Profile_avatar__3V8az\",\"name\":\"Profile_name__3htSI\",\"tag\":\"Profile_tag__2pFgw\",\"location\":\"Profile_location__1kNBP\",\"stats\":\"Profile_stats__1dg1m\",\"statsContainer\":\"Profile_statsContainer__31q3I\",\"label\":\"Profile_label__3GyWJ\",\"quantity\":\"Profile_quantity__38CWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__2Jssa\",\"title\":\"Statistic_title__36mDr\",\"statList\":\"Statistic_statList__2cR_2\",\"item\":\"Statistic_item__dwefs\",\"label\":\"Statistic_label__sj4o_\",\"percentage\":\"Statistic_percentage__2ueoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3ZAqw\",\"item\":\"FriendList_item__2e8BN\",\"avatar\":\"FriendList_avatar__10zGZ\",\"name\":\"FriendList_name__2eNMT\",\"status\":\"FriendList_status__22gqr\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ url, name, tag, location, followers, views, likes }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={url} alt=\"Аватар пользователя\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.statsContainer}>\n          <span className={styles.label}>Followers </span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li className={styles.statsContainer}>\n          <span className={styles.label}>Views </span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li className={styles.statsContainer}>\n          <span className={styles.label}>Likes </span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  url: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistic.module.css';\n\nfunction randColor() {\n  var r = Math.floor(Math.random() * 256),\n    g = Math.floor(Math.random() * 256),\n    b = Math.floor(Math.random() * 256);\n  return '#' + r.toString(16) + g.toString(16) + b.toString(16);\n}\n\nconst Statistic = ({ title, stats }) => {\n  return (\n    <section className={styles.statistic}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statList}>\n        {stats.map(stats => (\n          <li\n            key={stats.id}\n            className={styles.item}\n            style={{ backgroundColor: randColor() }}\n          >\n            <span className={styles.label}>{stats.label}</span>\n            <span className={styles.percentage}>{stats.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nStatistic.defaultTypes = {\n  title: '',\n};\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nconst stylesIsOnline = {\n  options: {\n    width: 10,\n    height: 10,\n    borderRadius: '50%',\n    marginLeft: 5,\n  },\n};\n\nconst FriendListItem = ({ avatar, isOnline, name }) => {\n  return (\n    <div className={styles.item}>\n      <span\n        style={{\n          ...stylesIsOnline.options,\n          backgroundColor: isOnline ? 'green' : 'red',\n        }}\n      ></span>\n      <img src={avatar} alt=\"\" width=\"48\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n    </div>\n  );\n};\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\nimport FriendListItem from './FriendListItem';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friends => (\n        <li key={friends.id}>\n          <FriendListItem\n            avatar={friends.avatar}\n            name={friends.name}\n            isOnline={friends.isOnline}\n            id={friends.id}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.prototype = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TransactionHistory.module.css';\n\nconst TransactionList = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionList.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionList from './TransactionList';\nimport './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      {items.map(items => (\n        <tbody key={items.id}>\n          <TransactionList\n            type={items.type}\n            amount={items.amount}\n            currency={items.currency}\n            id={items.id}\n          />\n        </tbody>\n      ))}\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/Profile/Profile';\nimport Statistic from './components/Statistic/Statistic';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/Transaction/TransactionHistory';\n\nimport user from './json/user.json';\nimport statisticData from './json/statistic.json';\nimport friends from './json/friendList.json';\nimport transactions from './json/transaction.json';\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        url={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistic title=\"Upload STATS\" stats={statisticData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}