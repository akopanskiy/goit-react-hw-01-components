{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistic/Statistic.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistic/Statistic.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transaction/TransactionList.js","components/Transaction/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","url","name","tag","location","followers","views","likes","className","styles","profile","description","src","alt","avatar","stats","statsContainer","label","quantity","randColor","r","Math","floor","random","g","b","toString","Statistic","title","statistic","statList","map","item","style","backgroundColor","percentage","id","defaultTypes","stylesIsOnline","width","height","borderRadius","marginLeft","FriendListItem","isOnline","FriendList","friends","friendList","prototype","PropTypes","arrayOf","shape","number","isRequired","TransactionList","type","amount","currency","TransactionHistory","items","App","user","statisticData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2153f8de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__39Kgt\",\"description\":\"Profile_description__3QpNF\",\"avatar\":\"Profile_avatar__3V8az\",\"name\":\"Profile_name__3htSI\",\"tag\":\"Profile_tag__2pFgw\",\"location\":\"Profile_location__1kNBP\",\"stats\":\"Profile_stats__1dg1m\",\"statsContainer\":\"Profile_statsContainer__31q3I\",\"label\":\"Profile_label__3GyWJ\",\"quantity\":\"Profile_quantity__38CWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__2Jssa\",\"title\":\"Statistic_title__36mDr\",\"statList\":\"Statistic_statList__2cR_2\",\"item\":\"Statistic_item__dwefs\",\"label\":\"Statistic_label__sj4o_\",\"percentage\":\"Statistic_percentage__2ueoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3ZAqw\",\"item\":\"FriendList_item__2e8BN\",\"avatar\":\"FriendList_avatar__10zGZ\",\"name\":\"FriendList_name__2eNMT\",\"status\":\"FriendList_status__22gqr\"};","import React from 'react' ;\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css'\r\n\r\nconst Profile = ({ url, name, tag, location, followers, views, likes }) => {\r\n    return (\r\n    <div className={styles.profile}>\r\n  <div className={styles.description}>\r\n    <img\r\n      src={url}\r\n      alt=\"Аватар пользователя\"\r\n      className={styles.avatar}\r\n    />\r\n    <p className={styles.name}>{name}</p>\r\n    <p className={styles.tag}>@{tag}</p>\r\n    <p className={styles.location}>{location}</p>\r\n  </div>\r\n\r\n  <ul className={styles.stats}>\r\n    <li className={styles.statsContainer}>\r\n      <span className={styles.label}>Followers </span>\r\n      <span className={styles.quantity}>{followers}</span>\r\n    </li>\r\n    <li className={styles.statsContainer}>\r\n      <span className={styles.label}>Views </span>\r\n      <span className={styles.quantity}>{views}</span>\r\n    </li>\r\n    <li className={styles.statsContainer}>\r\n      <span className={styles.label}>Likes </span>\r\n      <span className={styles.quantity}>{likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\nurl: PropTypes.string.isRequired,\r\nname: PropTypes.string.isRequired,\r\ntag: PropTypes.string.isRequired,\r\nlocation: PropTypes.string.isRequired,\r\nfollowers: PropTypes.number.isRequired,\r\nviews: PropTypes.number.isRequired,\r\nlikes: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Profile;","import React from 'react' ;\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistic.module.css';\r\n\r\nfunction randColor() {\r\n    var r = Math.floor(Math.random() * (256)),\r\n        g = Math.floor(Math.random() * (256)),\r\n        b = Math.floor(Math.random() * (256));\r\n    return '#' + r.toString(16) + g.toString(16) + b.toString(16);\r\n}\r\n\r\nconst Statistic = ({ title, stats }) => {\r\n    return (\r\n    <section className={styles.statistic}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n  \r\n    <ul className={styles.statList}>\r\n        {stats.map((stats) => (\r\n           \r\n                <li key={stats.id} className={styles.item}\r\n                style={{backgroundColor: randColor()}}>\r\n            <span className={styles.label}>{stats.label}</span>\r\n            <span className={styles.percentage}>{stats.percentage}</span>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  </section>\r\n  )\r\n}\r\nStatistic.defaultTypes = {\r\n    title: ''\r\n}\r\n\r\nStatistic.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                id: PropTypes.string.isRequired,\r\n                label: PropTypes.string.isRequired,\r\n                percentage: PropTypes.number.isRequired,\r\n            })\r\n    ).isRequired,\r\n}\r\n\r\nexport default Statistic;","import React from 'react' ;\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst stylesIsOnline = {\r\n    options:{\r\n        width: 10,\r\n    height: 10,\r\n    borderRadius: '50%',\r\n    marginLeft: 5,\r\n    }\r\n}\r\n\r\nconst FriendListItem = ({ avatar, isOnline, name }) => {\r\n    return (\r\n   <div className={styles.item}>\r\n         <span  \r\n         style={{...stylesIsOnline.options, backgroundColor: isOnline ? 'green' : 'red'}}\r\n         ></span>\r\n         <img  src={avatar} alt=\"\" width=\"48\"  className={styles.avatar}/>\r\n         <p className={styles.name}>{name}</p>\r\n   </div>\r\n    )\r\n      \r\n}\r\nFriendListItem.propTypes = {\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n        \r\n}\r\nexport default FriendListItem;","import React from 'react' ;\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\nimport FriendListItem from './FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (<ul className={styles.friendList}>\r\n        \r\n        {friends.map((friends) => (\r\n            <li key={friends.id} >\r\n            <FriendListItem \r\n            avatar={friends.avatar}\r\n            name={friends.name}\r\n            isOnline={friends.isOnline}\r\n            id={friends.id}\r\n            />\r\n            </li>\r\n        ))}\r\n       \r\n    </ul>)\r\n    \r\n}\r\n\r\nFriendList.prototype = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        })\r\n    ).isRequired,\r\n}\r\n\r\nexport default FriendList;","import React from 'react' ;\r\nimport PropTypes from 'prop-types';\r\nimport './TransactionHistory.module.css'\r\n\r\nconst TransactionList = ({ type, amount, currency }) => {\r\n    return (\r\n        <tr >\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr> \r\n    )\r\n}\r\n\r\nTransactionList.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default TransactionList;","import React from 'react' ;\r\nimport PropTypes from 'prop-types';\r\nimport TransactionList from './TransactionList'\r\nimport './TransactionHistory.module.css'\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return(\r\n<table >\r\n  <thead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n \r\n{items.map((items) => (\r\n   <tbody key={items.id}>\r\n            <TransactionList \r\n\r\n                 type={items.type}\r\n                 amount={items.amount}\r\n                 currency={items.currency}\r\n                 id={items.id} />\r\n    </tbody>\r\n))}\r\n  \r\n</table>\r\n    )}\r\n    \r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n).isRequired,\r\n    }\r\n\r\nexport default TransactionHistory;","import React from 'react';\r\nimport Profile from './components/Profile/Profile';\r\nimport Statistic from './components/Statistic/Statistic'\r\nimport FriendList from './components/FriendList/FriendList'\r\nimport TransactionHistory from './components/Transaction/TransactionHistory'\r\n\r\nimport user from './json/user.json';\r\nimport statisticData from './json/statistic.json'\r\nimport friends from './json/friendList.json'\r\nimport transactions from './json/transaction.json'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Profile \r\n            url ={user.avatar}\r\n            name = {user.name}\r\n            tag = {user.tag}\r\n            location = {user.location}\r\n            followers = {user.stats.followers}\r\n            views = {user.stats.views}\r\n            likes = {user.stats.likes}\r\n            />    \r\n            <Statistic title=\"Upload STATS\" stats ={statisticData}/>\r\n            <FriendList friends={friends}/>\r\n            <TransactionHistory items={transactions} />\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}